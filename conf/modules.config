process {

    withName: "SCIRPY_QUALITY" {
        ext.args = {
            [
                params.project_name ? "project_name:${params.project_name}" : '',
                params.clonotype_definition ? "clonotype_definition:${params.clonotype_definition}" : '',
                params.distance_metric ? "distance_metric:${params.distance_metric}" : '',
                params.sequence_type ? "sequence_type:${params.sequence_type}" : '',
                "work_directory:\$PWD"
            ].join(' -P ').trim()
        }
        publishDir = [
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '{data/*,figures/*}',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/" },
                pattern: 'report/*.html',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '_freeze/**/figure-html/*.png',
                saveAs: { file -> file.endsWith('.png') ? "figures/${file.split('/').last()}" : null },
                mode: 'copy',
                overwrite: true
            ],
        ]
    }

    withName: "SCIRPY_INTEGRATION" {
        ext.args = {
            [
                params.project_name ? "project_name:${params.project_name}" : '',
                params.clonotype_definition ? "clonotype_definition:${params.clonotype_definition}" : '',
                params.distance_metric ? "distance_metric:${params.distance_metric}" : '',
                params.sequence_type ? "sequence_type:${params.sequence_type}" : '',
                "work_directory:\$PWD"
            ].join(' -P ').trim()
        }        
        publishDir = [
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '{data/*,figures/*}',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/" },
                pattern: 'report/*.html',
                mode: 'copy',
                overwrite: true
            ],
            [
                path: { "${params.outdir}/data/${task.process}" },
                pattern: '_freeze/**/figure-html/*.png',
                saveAs: { file -> file.endsWith('.png') ? "figures/${file.split('/').last()}" : null },
                mode: 'copy',
                overwrite: true
            ],
        ]
    }

}


